// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// graffle_device_internal
std::string graffle_device_internal(std::string bg, int width, int height, double pointsize, int res, bool clip, bool antialias, bool drawing);
RcppExport SEXP _graffle_graffle_device_internal(SEXP bgSEXP, SEXP widthSEXP, SEXP heightSEXP, SEXP pointsizeSEXP, SEXP resSEXP, SEXP clipSEXP, SEXP antialiasSEXP, SEXP drawingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type bg(bgSEXP);
    Rcpp::traits::input_parameter< int >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type height(heightSEXP);
    Rcpp::traits::input_parameter< double >::type pointsize(pointsizeSEXP);
    Rcpp::traits::input_parameter< int >::type res(resSEXP);
    Rcpp::traits::input_parameter< bool >::type clip(clipSEXP);
    Rcpp::traits::input_parameter< bool >::type antialias(antialiasSEXP);
    Rcpp::traits::input_parameter< bool >::type drawing(drawingSEXP);
    rcpp_result_gen = Rcpp::wrap(graffle_device_internal(bg, width, height, pointsize, res, clip, antialias, drawing));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_graffle_graffle_device_internal", (DL_FUNC) &_graffle_graffle_device_internal, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_graffle(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
